PART 1
1. GIT adalah VCS (Version Control System) -> layanan yang menyimpan rekaman (snapshot) perubahan pada source code
    1.1 tujuan VCS:
        1.1.1 mengecek versi dari perubahan
        1.1.2 mempermudah kolaborasi
        1.1.3 kembali ke versi sebelum terjadi perubahaan

2. Git adalah VCS untuk mengelolah file pada folder
    2.1 untuk menyimpan riwayat perubahan menggunakan commit
    2.2 setiap melakukan commit akan dibuat hash sebagai penanda, author, date, dan commit message
    2.3 jika ingin membagi tugas dan tidak mengganggu main bisa membuat branch dan proses pengabungan dua buah branch disebut merge

3. GITHUB: layanan cloud untuk menyimpan repository
    3.1 apa yang dilakukan di git bisa dilakukan di GITHUB, yang berbeda GITHUB dilakukan secara cloud
    3.2 untuk bisa melakukan push dan pull pada GITHUB dan GIT perlu membuat GITHUB menjadi remote


key words:
a. Rekaman = snapshot
b. folder = repository
c. hash = penanda commit
d. cabang yang dibuat untuk kolaborasi / membagi tugas = branch
e. mengabungkan dua buah branch = merge
f. Push = mengirim commit ke repo
g. Pull = mengambil commit dari repo
h. checkout = berpindah ke sebuah commit
i. remote = sumber yang memiliki repo
j. clone = mengambil repo dari remote



PART 2
1. Belajar buat repo dan commit pada GITHUB
2. untuk melihat commit secara visual ke insight -> network

PART 3
1. Branch -> percabangan dari repository
    1.1 master branch -> jalur utama
    1.2 Membuat snapshot tanpa mengganggu jalur utama (master branch). Fitur experimental dan untuk kolaborasi
2. Belajar cara branch di GITHUB tinggal buat branch baru dan merge
3. Jika ketemu conflict perlu di tangani oleh master
4. checkout pindah ke branch/commit yang lain
5. Pull Request meminta pemilik repo untuk mengambil perubahan yang telah kita lakukan
6. merge gabungan 2 branch
7. Merge conflict beris yang sama diubah oleh dua branch yang berbeda

PART 3
1. Fork -> duplikat repo orang lain, tanpa mengganggu repo original
    1.1 memudahkan modifikasi repo original
    1.2 berkontributsi pada repo orang lain
    1.3 Fork != clone
        1.3.1 bedanya fork dan clone, kalau fork duplicate ke repo kita, sedangkan clone mencopy dari remote ke local

PART 4
1. belajar pakai GIT
    1. git init, git add <file(s)>, git status, git commit, git config, git branch, git help
    2. 3 area pada repo git
        2.1 working tree
        2.2 staging area -> memberitahu perubahan sudah terjadi
        2.3 history -> jika sudah commit masuk ke history
        2.4 {2.2 dan 2.3} disimpan di .git
         